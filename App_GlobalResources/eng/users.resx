<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ButtonAddUser" xml:space="preserve">
    <value>Add User</value>
    <comment>Button text for adding user</comment>
  </data>
  <data name="ButtonEditUser" xml:space="preserve">
    <value>Edit User</value>
    <comment>Button text for editting user</comment>
  </data>
  <data name="Cell" xml:space="preserve">
    <value>Cellphone:</value>
    <comment>Textfield for cellphone</comment>
  </data>
  <data name="ChangePasswd" xml:space="preserve">
    <value>Change password for user </value>
    <comment>Alternative text for image to change user password</comment>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Add, edit and delete users with this panel.</value>
    <comment>Users description</comment>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email:</value>
    <comment>Textfield for email</comment>
  </data>
  <data name="ErrorNoUID" xml:space="preserve">
    <value>A valid user id was not found!</value>
    <comment>Error text for no user id at form</comment>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First Name:</value>
    <comment>Textfield First name</comment>
  </data>
  <data name="GroupID" xml:space="preserve">
    <value>Select Group</value>
    <comment>Text for group selection</comment>
  </data>
  <data name="GroupName" xml:space="preserve">
    <value>Group:</value>
    <comment>Textfield group</comment>
  </data>
  <data name="Lang" xml:space="preserve">
    <value>Prefered Language:</value>
    <comment>Textfield for language selection</comment>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last Name:</value>
    <comment>Textfield last name</comment>
  </data>
  <data name="NewPasswd" xml:space="preserve">
    <value>New Password:</value>
    <comment>Textfield for new password</comment>
  </data>
  <data name="Org" xml:space="preserve">
    <value>Organization / Company:</value>
    <comment>Textfield for user working place</comment>
  </data>
  <data name="PassWD" xml:space="preserve">
    <value>Password:</value>
    <comment>Textfield password</comment>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Work Telephone:</value>
    <comment>Textfield for work telephone</comment>
  </data>
  <data name="Skin" xml:space="preserve">
    <value>Prefered Skin:</value>
    <comment>Texfield for skin selection</comment>
  </data>
  <data name="Title" xml:space="preserve">
    <value>User Administration</value>
    <comment>Users section title</comment>
  </data>
  <data name="TitleLastLogin" xml:space="preserve">
    <value>Last Login</value>
    <comment>Text of title om column last login</comment>
  </data>
  <data name="TitleUserName" xml:space="preserve">
    <value>Username</value>
    <comment>Title for username on table</comment>
  </data>
  <data name="TooltipBanButton" xml:space="preserve">
    <value>Ban user </value>
    <comment>Tooltip text for ban user</comment>
  </data>
  <data name="TooltipDeleteButton" xml:space="preserve">
    <value>Delete user </value>
    <comment>Tooltip text for deleting a user</comment>
  </data>
  <data name="TooltipEditButton" xml:space="preserve">
    <value>Edit information of user </value>
    <comment>Tooltip text for editing a user</comment>
  </data>
  <data name="TooltipEnableButton" xml:space="preserve">
    <value>Activate user </value>
    <comment>Tooltip text for enabling a user</comment>
  </data>
  <data name="TooltipUnbanButton" xml:space="preserve">
    <value>Unban user </value>
    <comment>Tooltip text for unban user</comment>
  </data>
  <data name="TooltipViewButton" xml:space="preserve">
    <value>View all information of user </value>
    <comment>Tooltip text for viewing user</comment>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>Username:</value>
    <comment>Textfield username</comment>
  </data>
  <data name="UserTitle" xml:space="preserve">
    <value>Work Position:</value>
    <comment>Textfield for work position</comment>
  </data>
  <data name="WorkArea" xml:space="preserve">
    <value>Work Department:</value>
    <comment>Textfield for work department</comment>
  </data>
</root>